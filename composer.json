{
    "name": "nhzex/think-phinx",
    "type": "library",
    "description": "Phinx integration for thinkphp",
    "keywords": [
        "thinkphp",
        "thinkphp6",
        "phinx"
    ],
    "license": "MIT",
    "authors": [
        {
            "name": "auooru",
            "email": "auooru@outlook.com"
        }
    ],
    "require": {
        "php": "^7.4|^8.0",
        "composer-runtime-api": "^2.1",
        "psr/container": "^1.0 || ^2.0",
        "robmorgan/phinx": "~0.13",
        "symfony/config": "^5.4|^6.0",
        "symfony/console": "^5.4|^6.0",
        "topthink/framework": "^6.0|^6.1|^8.0.1",
        "topthink/think-orm": "^2.0.30|^3.0",
        "zxin/phinx-schema": "^1.0.2",
        "zxin/think-symfony-bridge": "^3.0"
    },
    "require-dev": {
        "bamarni/composer-bin-plugin": "^1.8"
    },
    "replace": {
        "robmorgan/phinx": "0.13.4",
        "cakephp/database": "4.4.17"
    },
    "autoload": {
        "psr-4": {
            "HZEX\\Phinx\\": "src",
            "Zxin\\Think\\Phinx\\": "src-next"
        },
        "files": [
            "third-party/vendor/scoper-autoload.php"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Test\\Phinx\\": "tests"
        }
    },
    "extra": {
        "think": {
            "services": [
                "Zxin\\Think\\Phinx\\Service"
            ],
            "config": {
                "phinx": "config/phinx.php"
            }
        }
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "bamarni/composer-bin-plugin": true
        }
    },
    "scripts": {
        "post-install-cmd": [
            "@composer bin phpunit install --ansi",
            "@composer bin php-scoper install --ansi"
        ],
        "build-third-party": [
            "php-scoper add --working-dir=./third-party-src --output-dir=../third-party --force",
            "sleep 1",
            "@composer --working-dir=./third-party dump-autoload",
            "sleep 1",
            "rm -r ./._* || rm -r ./..* || true"
        ]
    }
}
